version: "3"
services:
  # Next.js application
  web:
    image: nextjs-app
    build: .
    ports:
      - "${NEXT_PORT}:3001"
    networks:
      - ring-network
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      NEXT_PUBLIC_AUTH_URL: ${NEXT_PUBLIC_AUTH_URL}
      NEXT_PUBLIC_FRONTEND_URL: ${NEXT_PUBLIC_FRONTEND_URL}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
    env_file:
      - .env
    depends_on:
      - db
      - minio
    command: >
      sh -c "
        npm install ts-node typescript &&
        npx prisma migrate reset -f &&
        npx prisma db push &&
        node server.js
      "

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    networks:
      - ring-network
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist PostgreSQL data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - ring-network
    depends_on:
      - db

  # minio:
  #   image: minio/minio
  #   volumes:
  #     - minio-data:/data
  #   networks:
  #     - ring-network
  #   environment:
  #     - MINIO_ROOT_USER=${MINIO_ROOT_USER}
  #     - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
  #   command: server /data --console-address ":9001"
  #   ports:
  #     - "9001:9001"
  #     - "9000:9000"

# volumes to persist database data
volumes:
  postgres-data:
  minio-data:

networks:
  ring-network:
    driver: bridge
